from flask import Flask, render_template
from flask_wtf import FlaskForm
from wtforms import FloatField
from wtforms.validators import InputRequired, NumberRange

app = Flask(__name__)
app.config['SECRET_KEY'] = 'Thisisasecret!'

class MyForm(FlaskForm):
    Hg = FloatField('Hg Atomic Fraction', validators=[InputRequired(),NumberRange(min=0.01,max=0.9)])
    Cd = FloatField('Cd Atomic Fraction', validators=[InputRequired(),NumberRange(min=0.01,max=0.9)])

@app.route('/', methods=['GET', 'POST'])
def form():
    form = MyForm()

    if form.validate_on_submit():
        x1 = form.Hg.data
        x2 = form.Cd.data
        c = [-22084.19046,-259449.7886,-19790.60393,526755.1452,271390.1683,-119032.4739,-130167.9637,79153.79729,428058.1319,-374437.9565,-593739.0414,201704.121,355877.9731,-92103.83379,-159420.7179,328449.7966,-99476.31544,-368391.5547,39450.3663,-13929.45012,11358.60516,179794.4495,-3998.322269,-700.7091274,-43325.26898,124.9467565,5844.470387,411.7137907]

        T = c[0]*(x1**6) + c[1]*(x1**5)*(x2) + c[2]*(x1**4)*(x2**2) + c[3]*(x1**3)*(x2**3) + c[4]*(x1**2)*(x2**4) + c[5]*(x1)*(x2**5) + c[6]*(x2**6) + c[7]*(x1**5) + c[8]*(x1**4)*(x2) + c[9]*(x1**3)*(x2**2) + c[10]*(x1**2)*(x2**3) + c[11]*(x1)*(x2**4) + c[12]*(x2**5) + c[13]*(x1**4) + c[14]*(x1**3)*(x2) + c[15]*(x1**2)*(x2**2) + c[16]*(x1)*(x2**3) + c[17]*(x2**4) + c[18]*(x1**3) + c[19]*(x1**2)*(x2) + c[20]*(x1)*(x2**2) + c[21]*(x2**3) + c[22]*(x1**2) + c[23]*(x1)*(x2) + c[24]*(x2**2) + c[25]*(x1) + c[26]*(x2) + c[27]

        T = round(T,3)

        d = [-68.79726383,-122.8002169,312.4727987,1083.295821,1222.528714,415.3440347,-167.2300454,224.0952816,231.9338273,-879.8443019,-1960.646102,-1060.339787,438.704998,-280.5731475,-120.8905264,884.7643711,941.3282927,-432.5780148,164.0174199,-38.12726262,-347.336101,199.1534798,-38.02063747,47.85650107,-43.11470154,-0.5839509986,3.983963998,0.8191431013]
        
        X = d[0]*(x1**6) + d[1]*(x1**5)*(x2) + d[2]*(x1**4)*(x2**2) + d[3]*(x1**3)*(x2**3) + d[4]*(x1**2)*(x2**4) + d[5]*(x1)*(x2**5) + d[6]*(x2**6) + d[7]*(x1**5) + d[8]*(x1**4)*(x2) + d[9]*(x1**3)*(x2**2) + d[10]*(x1**2)*(x2**3) + d[11]*(x1)*(x2**4) + d[12]*(x2**5) + d[13]*(x1**4) + d[14]*(x1**3)*(x2) + d[15]*(x1**2)*(x2**2) + d[16]*(x1)*(x2**3) + d[17]*(x2**4) + d[18]*(x1**3) + d[19]*(x1**2)*(x2) + d[20]*(x1)*(x2**2) + d[21]*(x2**3) + d[22]*(x1**2) + d[23]*(x1)*(x2) + d[24]*(x2**2) + d[25]*(x1) + d[26]*(x2) + d[27]

        X = round(X,5)

        return render_template('results.html',Hg=form.Hg.data,Cd=form.Cd.data,T=T,X=X)
    return render_template('form.html', form=form)

if __name__ == '__main__':
    app.run(debug=True)
